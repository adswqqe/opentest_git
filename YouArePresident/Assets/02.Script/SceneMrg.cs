using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.SceneManagement;
public class SceneMrg : MonoBehaviour
{
    public static SceneMrg sceneMrg;

    public bool isLoding = false;
    bool isDone = false;
    AsyncOperation async_operation;
    public GameObject foreground;
    float fTime = 0.0f;
	// Use this for initialization
	void Awake ()
    {
        if (sceneMrg == null)
            sceneMrg = this;
        else if (sceneMrg != this)
            Destroy(this.gameObject);

        DontDestroyOnLoad(this.gameObject);
	}

    public void NextScene(int _Num)
    {
        if (!isLoding)
            StartCoroutine(StartLoad(_Num));
    }

    public void DestroyFore()
    {

    }

    IEnumerator StartLoad(int _Num)
    {
        isLoding = true;
        async_operation = SceneManager.LoadSceneAsync(_Num);
        async_operation.allowSceneActivation = false;

        if (async_operation.isDone == false)
        {

            GameObject _fore = (GameObject)Instantiate(foreground, new Vector2(0, 0), new Quaternion(0, 0, 0, 0));
            Animator _foreAnim = _fore.GetComponentInChildren<Animator>();
            DontDestroyOnLoad(_fore);

            _foreAnim.SetTrigger("leftMove");

            yield return new WaitForSeconds(0.5f); // 애니메이션이 작동하기까지 선딜레이

            // 최적화 부분 문제가 발생한다면 여길 손 볼 것.
            while (_foreAnim.GetCurrentAnimatorStateInfo(0).IsName("leftMoveForeground"))   // 애니메이션이 재생 될 동안...
            {
                if (!_foreAnim.GetCurrentAnimatorStateInfo(0).IsName("leftMoveForeground"))
                    break;

                yield return new WaitForSeconds(0.02f);
            }

            if(!DataMrg.dataMrg.hasLoding)  // 화면이 닫혔을 때 로딩시키기
            {
                DataMrg.dataMrg.setPowerInfo();
                DataMrg.dataMrg.LoadFunc();
                while (!DataMrg.dataMrg.hasLoding)
                {
                    yield return new WaitForSeconds(0.02f);
                }
            }

            while(!async_operation.isDone)  // 로딩이 끝날 때 까지 대기
            {
                if (async_operation.progress >= 0.9f)
                    break;

                yield return new WaitForSeconds(0.02f);
            }

            async_operation.allowSceneActivation = true;    // foreground가 애니메이션이 끝나면 씬 전환

            _foreAnim.SetTrigger("rightMove");

            yield return new WaitForSeconds(0.5f);  // 애니메이션이 작동하기까지 선딜레이

            //while (_foreAnim.GetCurrentAnimatorStateInfo(0).IsName("rightMoveForeground"))  // 애니메이션이 재생 될 동안...
            //{
            //    if (!_foreAnim.GetCurrentAnimatorStateInfo(0).IsName("rightMoveForeground"))
            //        break;

            //    yield return new WaitForSeconds(0.02f);
            //}

         //   Destroy(_fore);
        }

        isLoding = false;

    }
}
